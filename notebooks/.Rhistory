alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.14, 36.195),
expand = FALSE)  +
theme_void() + # get rid of background color, grid lines, etc.
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.145, 36.195),
expand = FALSE)  +
theme_void() + # get rid of background color, grid lines, etc.
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() + # get rid of background color, grid lines, etc.
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
getbb("Birmingham Alabama")
getbb("Nashville Tennessee")
big_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
big_streets
View(big_streets[["osm_lines"]])
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggsave("linkedin_test.png")
library(tidyverse)
library(osmdata) # package for working with streets
library(showtext) # for custom fonts
library(ggmap)
library(rvest)
# Find coordinate borders of your city
getbb("Nashville Tennessee")
# Open streets has many categories of roads, so we'll start by combining them into just a few levels.
# These levels will be displayed by different thickness on the final product.
# Start with the largest roads. Use osmdata_sf() to convert them to a form which ggmap can read.
big_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
# Continue the same process, with two more levels of streets.
med_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("secondary", "tertiary", "secondary_link", "tertiary_link")) %>%
osmdata_sf()
small_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service", "footway"
)) %>%
osmdata_sf()
# Add other distinctive features to the map, such as rivers and railways.
river <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
railway <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
# This is just a preview - what does one level of roads look like, with no additional formatting?
ggplot() +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black")
# Add it all together to create a full map of the city!
# Note that you can use colors and line thickness/weight to distinguish the levels we already created.
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62), # Set the borders of your map (influenced the getbb() from above)
ylim = c(36.03, 36.30),
expand = FALSE)  +
theme_void() + # get rid of background color, grid lines, etc.
theme(plot.title = element_text(size = 20, face="bold", hjust=.5), # Add a title to your map
plot.subtitle = element_text(size = 8, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
library(tidyverse)
library(osmdata) # package for working with streets
library(showtext) # for custom fonts
library(ggmap)
library(rvest)
# Find coordinate borders of your city
getbb("Nashville Tennessee")
# Open streets has many categories of roads, so we'll start by combining them into just a few levels.
# These levels will be displayed by different thickness on the final product.
# Start with the largest roads. Use osmdata_sf() to convert them to a form which ggmap can read.
big_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
# Continue the same process, with two more levels of streets.
med_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("secondary", "tertiary", "secondary_link", "tertiary_link")) %>%
osmdata_sf()
small_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service", "footway"
)) %>%
osmdata_sf()
# Add other distinctive features to the map, such as rivers and railways.
river <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
railway <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
# This is just a preview - what does one level of roads look like, with no additional formatting?
ggplot() +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black")
# Add it all together to create a full map of the city!
# Note that you can use colors and line thickness/weight to distinguish the levels we already created.
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62), # Set the borders of your map (influenced the getbb() from above)
ylim = c(36.03, 36.30),
expand = FALSE)  +
theme_void() + # get rid of background color, grid lines, etc.
theme(plot.title = element_text(size = 20, face="bold", hjust=.5), # Add a title to your map
plot.subtitle = element_text(size = 8, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
#ggsave("linkedin_map_header.png") # Save image as png
library(tidyverse)
library(osmdata) # package for working with streets
library(showtext) # for custom fonts
library(ggmap)
library(rvest)
# Open streets has many categories of roads, so we'll start by combining them into just a few levels.
# These levels will be displayed by different thickness on the final product.
# Start with the largest roads. Use osmdata_sf() to convert them to a form which ggmap can read.
big_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link", "primary_link")) %>%
osmdata_sf()
# Continue the same process, with two more levels of streets.
med_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("secondary", "tertiary", "secondary_link", "tertiary_link")) %>%
osmdata_sf()
small_streets <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "highway",
value = c("residential", "living_street",
"unclassified",
"service", "footway"
)) %>%
osmdata_sf()
# Add other distinctive features to the map, such as rivers and railways.
river <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "waterway", value = "river") %>%
osmdata_sf()
railway <- getbb("Nashville Tennessee")%>%
opq()%>%
add_osm_feature(key = "railway", value="rail") %>%
osmdata_sf()
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggsave("linkedin_map_header.png", width = 2200, height = 550) # Save image as png
ggsave("linkedin_map_header.png", width = 5, height = 2) # Save image as png
ggsave("linkedin_map_header.png", width = 10, height = 4) # Save image as png
ggsave("linkedin_map_header.png", width = 10, height = 3) # Save image as png
ggsave("linkedin_map_header.png", width = 10, height = 2.5) # Save image as png
ggsave("linkedin_map_header.png", width = 12, height = 3) # Save image as png
ggsave("linkedin_map_header.png", width = 20, height = 6) # Save image as png
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggsave("linkedin_map_header.png", width = 20, height = 6) # Save image as png
# Update your map borders to fit within a LinkedIn Header
# (you'll have to play around with this until you're happy)
ggplot() +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "steelblue",
size = .8,
alpha = .3) +
geom_sf(data = railway$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .2,
linetype="dotdash",
alpha = .5) +
geom_sf(data = med_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .3,
alpha = .5) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "#666666",
size = .2,
alpha = .3) +
geom_sf(data = big_streets$osm_lines,
inherit.aes = FALSE,
color = "black",
size = .5,
alpha = .6) +
coord_sf(xlim = c(-86.95, -86.62),
ylim = c(36.142, 36.195),
expand = FALSE)  +
theme_void() +
theme(plot.title = element_text(size = 12, face="bold", hjust=.5),
plot.subtitle = element_text(size = 6, hjust=.5, margin=margin(2, 0, 5, 0))) +
labs(title = "NASHVILLE", subtitle = "36.1627°N / 86.7816°W")
ggsave("linkedin_map_header.png") # Save image as png
ggsave("linkedin_map_header.png", width = 7.29, height = 2.5) # Save image as png
setwd("~/Documents/nss_projects/airbnb-sentiments/notebooks")
knitr::opts_chunk$set(echo = TRUE)
library(tidycensus)
library(tidycensus)
census_api_key("AIzaSyAlUWGuMEHo-9RwZvXt4aYWCxV0R56HOMM", install=TRUE)
